{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"notice-board\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"最新通知\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.notices, notice => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: notice.id,\n      class: _normalizeClass({\n        'is-pinned': notice.isPinned\n      })\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(notice.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(notice.content), 1 /* TEXT */), _createElementVNode(\"small\", null, \"发布时间: \" + _toDisplayString(new Date(notice.createdAt).toLocaleString()), 1 /* TEXT */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","notices","notice","key","id","_normalizeClass","isPinned","_toDisplayString","title","content","Date","createdAt","toLocaleString"],"sources":["/home/toma/桌面/projects/RuralWebApp/frontend/src/components/NoticeBoard.vue"],"sourcesContent":["<template>\r\n  <div class=\"notice-board\">\r\n    <h2>最新通知</h2>\r\n    <ul>\r\n      <li\r\n        v-for=\"notice in notices\"\r\n        :key=\"notice.id\"\r\n        :class=\"{ 'is-pinned': notice.isPinned }\"\r\n      >\r\n        <strong>{{ notice.title }}</strong>\r\n        <p>{{ notice.content }}</p>\r\n        <small>发布时间: {{ new Date(notice.createdAt).toLocaleString() }}</small>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      notices: [],\r\n    };\r\n  },\r\n  methods: {\r\n    fetchNotices() {\r\n      fetch('http://localhost:5000/api/notices')\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          // 假设 API 返回的数据中包含 isPinned 字段\r\n          this.notices = data.map((notice) => ({\r\n            ...notice,\r\n            isPinned: notice.isPinned || false, // 确保 isPinned 字段存在\r\n          }));\r\n\r\n          // 对通知进行排序，确保 isPinned 为 true 的通知排在前面\r\n          this.notices.sort((a, b) => {\r\n            if (a.isPinned && !b.isPinned) return -1;\r\n            if (!a.isPinned && b.isPinned) return 1;\r\n            return 0;\r\n          });\r\n        })\r\n        .catch((err) => console.error(err));\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchNotices();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.notice-board {\r\n  padding: 20px;\r\n  background: #f9f9f9;\r\n  border-radius: 8px;\r\n  border: 1px solid #ddd;\r\n}\r\n.notice-board h2 {\r\n  margin-bottom: 10px;\r\n}\r\n.notice-board ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n.notice-board li {\r\n  margin-bottom: 15px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid #eaeaea;\r\n  padding: 10px;\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  transition: background 0.3s;\r\n}\r\n.notice-board li.is-pinned {\r\n  background: #f1f1f1; /* 高亮背景色 */\r\n  font-weight: bold; /* 加粗字体 */\r\n}\r\n\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;uBAAzBC,mBAAA,CAaM,OAbNC,UAaM,G,0BAZJC,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAUK,c,kBATHF,mBAAA,CAQKG,SAAA,QAZXC,WAAA,CAKyBC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;yBADfP,mBAAA,CAQK;MANFQ,GAAG,EAAED,MAAM,CAACE,EAAE;MACdV,KAAK,EAPdW,eAAA;QAAA,aAO+BH,MAAM,CAACI;MAAQ;QAEtCT,mBAAA,CAAmC,gBAAAU,gBAAA,CAAxBL,MAAM,CAACM,KAAK,kBACvBX,mBAAA,CAA2B,WAAAU,gBAAA,CAArBL,MAAM,CAACO,OAAO,kBACpBZ,mBAAA,CAAsE,eAA/D,QAAM,GAAAU,gBAAA,KAAOG,IAAI,CAACR,MAAM,CAACS,SAAS,EAAEC,cAAc,mB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}