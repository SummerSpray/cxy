{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      loginError: \"\" // 用于显示登录错误信息\n    };\n  },\n  methods: {\n    // 处理登录请求\n    async handleLogin() {\n      console.log(\"请求参数:\", this.username, this.password);\n      try {\n        // 发送 POST 请求到后端登录接口\n        const response = await axios.post(\"http://localhost:5000/api/users/login\", {\n          username: this.username,\n          password: this.password\n        });\n        console.log(\"服务器返回:\", response.data);\n\n        // 如果登录成功\n        if (response.data.success) {\n          // 存储用户数据到 localStorage\n          localStorage.setItem(\"userData\", JSON.stringify(response.data.user));\n          // 跳转到管理页面\n          this.$router.push(\"/admin\");\n        } else {\n          this.loginError = \"用户名或密码错误\";\n        }\n      } catch (error) {\n        console.error(\"登录失败\", error);\n        this.loginError = \"网络错误，请稍后重试\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","password","loginError","methods","handleLogin","console","log","response","post","success","localStorage","setItem","JSON","stringify","user","$router","push","error"],"sources":["/home/toma/桌面/projects/RuralWebApp/frontend/src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>用户登录</h2>\r\n\r\n    <!-- 登录表单 -->\r\n    <form @submit.prevent=\"handleLogin\" class=\"login-form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">用户名</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          v-model=\"username\"\r\n          placeholder=\"请输入用户名\"\r\n          required\r\n        />\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"password\">密码</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          v-model=\"password\"\r\n          placeholder=\"请输入密码\"\r\n          required\r\n        />\r\n      </div>\r\n      \r\n      <div v-if=\"loginError\" class=\"error-message\">\r\n        <p>{{ loginError }}</p>\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"login-btn\">登录</button>\r\n    </form>\r\n\r\n    <!-- 注册和忘记密码的链接 -->\r\n    <div class=\"links\">\r\n      <router-link to=\"/register\">没有账号? 注册</router-link>\r\n      <router-link to=\"/forgot-password\">忘记密码?</router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      loginError: \"\",  // 用于显示登录错误信息\r\n    };\r\n  },\r\n  methods: {\r\n    // 处理登录请求\r\n    async handleLogin() {\r\n      console.log(\"请求参数:\", this.username, this.password);\r\n\r\n      try {\r\n        // 发送 POST 请求到后端登录接口\r\n        const response = await axios.post(\"http://localhost:5000/api/users/login\", {\r\n          username: this.username,\r\n          password: this.password,\r\n        });\r\n\r\n        console.log(\"服务器返回:\", response.data);\r\n\r\n        // 如果登录成功\r\n        if (response.data.success) {\r\n          // 存储用户数据到 localStorage\r\n          localStorage.setItem(\"userData\", JSON.stringify(response.data.user));\r\n          // 跳转到管理页面\r\n          this.$router.push(\"/admin\");\r\n        } else {\r\n          this.loginError = \"用户名或密码错误\";\r\n        }\r\n      } catch (error) {\r\n        console.error(\"登录失败\", error);\r\n        this.loginError = \"网络错误，请稍后重试\";\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 2rem auto;\r\n  padding: 2rem;\r\n  background-color: #ffffff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\r\n  font-family: 'Arial', sans-serif; /* 设置字体 */\r\n  text-align: center; /* 文本居中 */\r\n}\r\n\r\nh2 {\r\n  margin-bottom: 1.5rem;\r\n  color: #333;\r\n  font-size: 1.75rem; /* 增加标题大小 */\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n  text-align: left; /* 表单内容左对齐 */\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: bold;\r\n  color: #555; /* 标签颜色 */\r\n}\r\n\r\n.form-group input {\r\n  width: 100%; /* 调整输入框宽度 */\r\n  max-width: 374px; /* 设置最大宽度 */\r\n  padding: 12px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px; /* 增加圆角 */\r\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05); /* 输入框阴影 */\r\n}\r\n\r\n.error-message {\r\n  color: #d8000c;\r\n  background-color: #ffbaba;\r\n  padding: 10px;\r\n  margin-bottom: 1.5rem;\r\n  text-align: center;\r\n  border-radius: 5px; /* 错误消息圆角 */\r\n}\r\n\r\n.login-btn {\r\n  width: 100%; /* 调整按钮宽度 */\r\n  padding: 12px;\r\n  font-size: 16px;\r\n  background-color: #007BFF; /* 更改按钮颜色为蓝色 */\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px; /* 增加圆角 */\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease; /* 过渡效果 */\r\n}\r\n\r\n.login-btn:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.links {\r\n  margin-top: 1.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.links a {\r\n  display: block;\r\n  margin: 5px 0;\r\n  color: #007BFF;\r\n  text-decoration: none;\r\n  font-size: 0.9rem; /* 链接字体大小 */\r\n}\r\n\r\n.links a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 600px) {\r\n  .login-container {\r\n    padding: 1.5rem;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .form-group input {\r\n    padding: 10px;\r\n  }\r\n\r\n  .login-btn {\r\n    padding: 10px;\r\n  }\r\n}\r\n</style>"],"mappings":"AA4CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE,CAAG;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,WAAWA,CAAA,EAAG;MAClBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACN,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC;MAElD,IAAI;QACF;QACA,MAAMM,QAAO,GAAI,MAAMT,KAAK,CAACU,IAAI,CAAC,uCAAuC,EAAE;UACzER,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEFI,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,QAAQ,CAACR,IAAI,CAAC;;QAEpC;QACA,IAAIQ,QAAQ,CAACR,IAAI,CAACU,OAAO,EAAE;UACzB;UACAC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACR,IAAI,CAACe,IAAI,CAAC,CAAC;UACpE;UACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC7B,OAAO;UACL,IAAI,CAACd,UAAS,GAAI,UAAU;QAC9B;MACF,EAAE,OAAOe,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAAC,MAAM,EAAEA,KAAK,CAAC;QAC5B,IAAI,CAACf,UAAS,GAAI,YAAY;MAChC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}