{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_5 = {\n  class: \"links\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"用户登录\", -1 /* HOISTED */)), _createCommentVNode(\" 登录表单 \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.handleLogin && $options.handleLogin(...args), [\"prevent\"])),\n    class: \"login-form\"\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"用户名\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    placeholder: \"请输入用户名\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"密码\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    placeholder: \"请输入密码\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), $data.loginError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, _toDisplayString($data.loginError), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"login-btn\"\n  }, \"登录\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createCommentVNode(\" 注册和忘记密码的链接 \"), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_router_link, {\n    to: \"/register\"\n  }, {\n    default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"没有账号? 注册\")])),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: \"/forgot-password\"\n  }, {\n    default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"忘记密码?\")])),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","handleLogin","_hoisted_2","for","type","id","$event","$data","username","placeholder","required","_hoisted_3","password","loginError","_hoisted_4","_toDisplayString","_hoisted_5","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_"],"sources":["/home/toma/桌面/projects/RuralWebApp/frontend/src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>用户登录</h2>\r\n\r\n    <!-- 登录表单 -->\r\n    <form @submit.prevent=\"handleLogin\" class=\"login-form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">用户名</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          v-model=\"username\"\r\n          placeholder=\"请输入用户名\"\r\n          required\r\n        />\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"password\">密码</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          v-model=\"password\"\r\n          placeholder=\"请输入密码\"\r\n          required\r\n        />\r\n      </div>\r\n      \r\n      <div v-if=\"loginError\" class=\"error-message\">\r\n        <p>{{ loginError }}</p>\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"login-btn\">登录</button>\r\n    </form>\r\n\r\n    <!-- 注册和忘记密码的链接 -->\r\n    <div class=\"links\">\r\n      <router-link to=\"/register\">没有账号? 注册</router-link>\r\n      <router-link to=\"/forgot-password\">忘记密码?</router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      loginError: \"\",  // 用于显示登录错误信息\r\n    };\r\n  },\r\n  methods: {\r\n    // 处理登录请求\r\n    async handleLogin() {\r\n      console.log(\"请求参数:\", this.username, this.password);\r\n\r\n      try {\r\n        // 发送 POST 请求到后端登录接口\r\n        const response = await axios.post(\"http://localhost:5000/api/users/login\", {\r\n          username: this.username,\r\n          password: this.password,\r\n        });\r\n\r\n        console.log(\"服务器返回:\", response.data);\r\n\r\n        // 如果登录成功\r\n        if (response.data.success) {\r\n          // 存储用户数据到 localStorage\r\n          localStorage.setItem(\"userData\", JSON.stringify(response.data.user));\r\n          // 跳转到管理页面\r\n          this.$router.push(\"/admin\");\r\n        } else {\r\n          this.loginError = \"用户名或密码错误\";\r\n        }\r\n      } catch (error) {\r\n        console.error(\"登录失败\", error);\r\n        this.loginError = \"网络错误，请稍后重试\";\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 2rem auto;\r\n  padding: 2rem;\r\n  background-color: #ffffff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\r\n  font-family: 'Arial', sans-serif; /* 设置字体 */\r\n  text-align: center; /* 文本居中 */\r\n}\r\n\r\nh2 {\r\n  margin-bottom: 1.5rem;\r\n  color: #333;\r\n  font-size: 1.75rem; /* 增加标题大小 */\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n  text-align: left; /* 表单内容左对齐 */\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: bold;\r\n  color: #555; /* 标签颜色 */\r\n}\r\n\r\n.form-group input {\r\n  width: 100%; /* 调整输入框宽度 */\r\n  max-width: 374px; /* 设置最大宽度 */\r\n  padding: 12px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px; /* 增加圆角 */\r\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05); /* 输入框阴影 */\r\n}\r\n\r\n.error-message {\r\n  color: #d8000c;\r\n  background-color: #ffbaba;\r\n  padding: 10px;\r\n  margin-bottom: 1.5rem;\r\n  text-align: center;\r\n  border-radius: 5px; /* 错误消息圆角 */\r\n}\r\n\r\n.login-btn {\r\n  width: 100%; /* 调整按钮宽度 */\r\n  padding: 12px;\r\n  font-size: 16px;\r\n  background-color: #007BFF; /* 更改按钮颜色为蓝色 */\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px; /* 增加圆角 */\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease; /* 过渡效果 */\r\n}\r\n\r\n.login-btn:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.links {\r\n  margin-top: 1.5rem;\r\n  text-align: center;\r\n}\r\n\r\n.links a {\r\n  display: block;\r\n  margin: 5px 0;\r\n  color: #007BFF;\r\n  text-decoration: none;\r\n  font-size: 0.9rem; /* 链接字体大小 */\r\n}\r\n\r\n.links a:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 600px) {\r\n  .login-container {\r\n    padding: 1.5rem;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  .form-group input {\r\n    padding: 10px;\r\n  }\r\n\r\n  .login-btn {\r\n    padding: 10px;\r\n  }\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAKnBA,KAAK,EAAC;AAAY;;EAWlBA,KAAK,EAAC;AAAY;;EAjB7BC,GAAA;EA4B6BD,KAAK,EAAC;;;EAQ1BA,KAAK,EAAC;AAAO;;;uBAnCpBE,mBAAA,CAuCM,OAvCNC,UAuCM,G,0BAtCJC,mBAAA,CAAa,YAAT,MAAI,sBAERC,mBAAA,UAAa,EACbD,mBAAA,CA4BO;IA5BAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALjBC,cAAA,KAAAC,IAAA,KAK2BC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAET,KAAK,EAAC;MACxCI,mBAAA,CASM,OATNQ,UASM,G,0BARJR,mBAAA,CAAiC;IAA1BS,GAAG,EAAC;EAAU,GAAC,KAAG,sB,gBACzBT,mBAAA,CAME;IALAU,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,UAAU;IAVvB,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAWmBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IACjBG,WAAW,EAAC,QAAQ;IACpBC,QAAQ,EAAR;iDAFSH,KAAA,CAAAC,QAAQ,E,KAMrBd,mBAAA,CASM,OATNiB,UASM,G,0BARJjB,mBAAA,CAAgC;IAAzBS,GAAG,EAAC;EAAU,GAAC,IAAE,sB,gBACxBT,mBAAA,CAME;IALAU,IAAI,EAAC,UAAU;IACfC,EAAE,EAAC,UAAU;IArBvB,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAsBmBC,KAAA,CAAAK,QAAQ,GAAAN,MAAA;IACjBG,WAAW,EAAC,OAAO;IACnBC,QAAQ,EAAR;iDAFSH,KAAA,CAAAK,QAAQ,E,KAMVL,KAAA,CAAAM,UAAU,I,cAArBrB,mBAAA,CAEM,OAFNsB,UAEM,GADJpB,mBAAA,CAAuB,WAAAqB,gBAAA,CAAjBR,KAAA,CAAAM,UAAU,iB,KA7BxBlB,mBAAA,gB,0BAgCMD,mBAAA,CAAmD;IAA3CU,IAAI,EAAC,QAAQ;IAACd,KAAK,EAAC;KAAY,IAAE,qB,4BAG5CK,mBAAA,gBAAmB,EACnBD,mBAAA,CAGM,OAHNsB,UAGM,GAFJC,YAAA,CAAkDC,sBAAA;IAArCC,EAAE,EAAC;EAAW;IArCjCC,OAAA,EAAAC,QAAA,CAqCkC,MAAQxB,MAAA,QAAAA,MAAA,OArC1CyB,gBAAA,CAqCkC,UAAQ,E;IArC1CC,CAAA;MAsCMN,YAAA,CAAsDC,sBAAA;IAAzCC,EAAE,EAAC;EAAkB;IAtCxCC,OAAA,EAAAC,QAAA,CAsCyC,MAAKxB,MAAA,QAAAA,MAAA,OAtC9CyB,gBAAA,CAsCyC,OAAK,E;IAtC9CC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}