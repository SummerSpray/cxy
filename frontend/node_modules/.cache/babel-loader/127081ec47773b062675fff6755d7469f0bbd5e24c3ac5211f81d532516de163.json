{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"carousel\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = {\n  class: \"village-list\"\n};\nconst _hoisted_4 = [\"src\", \"onError\"];\nconst _hoisted_5 = {\n  class: \"village-info\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_swiper_slide = _resolveComponent(\"swiper-slide\");\n  const _component_swiper = _resolveComponent(\"swiper\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_NoticeBoard = _resolveComponent(\"NoticeBoard\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 滚动图片 \"), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_swiper, {\n    loop: true,\n    autoplay: $data.autoplay,\n    pagination: \"\",\n    navigation: \"\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 循环渲染图片 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, (image, index) => {\n      return _openBlock(), _createBlock(_component_swiper_slide, {\n        key: index\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"img\", {\n          src: image,\n          alt: \"滚动图片\"\n        }, null, 8 /* PROPS */, _hoisted_2)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"autoplay\"])]), _createCommentVNode(\" 推荐村庄 \"), _cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"推荐村庄\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.visibleVillages, village => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"village-card\",\n      key: village.id\n    }, [_createElementVNode(\"img\", {\n      src: village.image || $data.defaultImage,\n      alt: \"村庄图片\",\n      class: \"village-image\",\n      onError: $event => $options.handleImageError(village)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h3\", null, _toDisplayString(village.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(village.description), 1 /* TEXT */), _createVNode(_component_router_link, {\n      to: '/village/' + village.id,\n      class: \"village-link\"\n    }, {\n      default: _withCtx(() => [...(_cache[0] || (_cache[0] = [_createTextVNode(\" 查看详情 \")]))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])])]);\n  }), 128 /* KEYED_FRAGMENT */))]), !$data.showAll ? (_openBlock(), _createBlock(_component_router_link, {\n    key: 0,\n    to: \"/village\",\n    class: \"show-all-btn\"\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" 展开全部 \")])),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 通知 \"), _createVNode(_component_NoticeBoard, {\n    notices: $data.notices\n  }, null, 8 /* PROPS */, [\"notices\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createCommentVNode","_createElementVNode","_hoisted_1","_createVNode","_component_swiper","loop","autoplay","$data","pagination","navigation","default","_withCtx","_Fragment","_renderList","images","image","index","_createBlock","_component_swiper_slide","key","src","alt","_hoisted_2","_","_hoisted_3","visibleVillages","village","id","defaultImage","onError","$event","$options","handleImageError","_hoisted_4","_hoisted_5","_toDisplayString","name","description","_component_router_link","to","_cache","_createTextVNode","showAll","_component_NoticeBoard","notices"],"sources":["/home/toma/桌面/projects/RuralWebApp/frontend/src/views/Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 滚动图片 -->\r\n    <div class=\"carousel\">\r\n      <swiper\r\n        :loop=\"true\"\r\n        :autoplay=\"autoplay\"\r\n        pagination\r\n        navigation\r\n      >\r\n        <!-- 循环渲染图片 -->\r\n        <swiper-slide v-for=\"(image, index) in images\" :key=\"index\">\r\n          <img :src=\"image\" alt=\"滚动图片\" />\r\n        </swiper-slide>\r\n      </swiper>\r\n    </div>\r\n\r\n    <!-- 推荐村庄 -->\r\n    <h2>推荐村庄</h2>\r\n    <div class=\"village-list\">\r\n      <div\r\n        class=\"village-card\"\r\n        v-for=\"village in visibleVillages\"\r\n        :key=\"village.id\"\r\n      >\r\n        <img \r\n          :src=\"village.image || defaultImage\" \r\n          alt=\"村庄图片\" \r\n          class=\"village-image\" \r\n          @error=\"handleImageError(village)\" \r\n        />\r\n        <div class=\"village-info\">\r\n          <h3>{{ village.name }}</h3>\r\n          <p>{{ village.description }}</p>\r\n          <router-link :to=\"'/village/' + village.id\" class=\"village-link\">\r\n            查看详情\r\n          </router-link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <router-link v-if=\"!showAll\" to=\"/village\" class=\"show-all-btn\">\r\n      展开全部\r\n    </router-link>\r\n\r\n    <!-- 通知 -->\r\n    <NoticeBoard :notices=\"notices\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SwiperCore, { Autoplay, Pagination, Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/vue';\r\nimport 'swiper/swiper-bundle.min.css';\r\nimport NoticeBoard from \"@/components/NoticeBoard.vue\";\r\nimport { getUserLocation } from \"@/utils/locationService\";\r\n\r\n// 注册 Swiper 模块\r\nSwiperCore.use([Autoplay, Pagination, Navigation]);\r\n\r\nexport default {\r\n  components: {\r\n    Swiper,\r\n    SwiperSlide,\r\n    NoticeBoard,\r\n  },\r\n  data() {\r\n    return {\r\n      autoplay: {\r\n        delay: 3000, // 自动切换间隔（毫秒）\r\n        disableOnInteraction: false, // 用户交互后继续自动切换\r\n      },\r\n      images: [], // 图片数组\r\n      notices: [\"村庄活动即将开始\", \"新品上市通知\", \"科技团队发布成果\"],\r\n      location: null,\r\n      recommendedVillages: [], // 动态获取村庄数据\r\n      defaultImage: require('@/assets/villages/default.jpg'),\r\n      visibleVillages: [], // 可见村庄\r\n      showAll: false,\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchRecommendedVillages() {\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/api/village\");\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n\r\n    // 设置推荐村庄数据\r\n    this.recommendedVillages = data.map(village => ({\r\n      id: village.id,\r\n      name: village.name,\r\n      description: village.description || \"暂无描述\",\r\n      image: village.image ? require(`@/assets/${village.image}`) : this.defaultImage,\r\n    }));\r\n\r\n    // 默认显示前5个村庄\r\n    this.visibleVillages = this.recommendedVillages.slice(0, 5);\r\n  } catch (error) {\r\n    console.error(\"获取村庄数据失败:\", error);\r\n  }\r\n},\r\n    async loadImages() {\r\n      try {\r\n        const images = require.context('@/assets/bgImages', false, /\\.(png|jpe?g|gif)$/);\r\n        this.images = images.keys().map(imagePath => images(imagePath));\r\n      } catch (error) {\r\n        console.error(\"无法加载图片:\", error);\r\n      }\r\n    },\r\n    handleImageError(village) {\r\n      // 如果图片加载失败，将图片设置为默认图片\r\n      village.image = this.defaultImage;\r\n    },\r\n  },\r\n  async created() {\r\n    try {\r\n      this.location = await getUserLocation();\r\n      await this.fetchRecommendedVillages(); // 获取村庄数据\r\n      await this.loadImages(); // 获取滚动图片\r\n    } catch (error) {\r\n      console.error(\"初始化错误:\", error);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 滚动图片样式 */\r\n.carousel {\r\n  width: 100%;\r\n  height: 450px;\r\n  margin-bottom: 20px;\r\n  overflow: hidden; /* 防止内容超出容器范围 */\r\n}\r\n\r\n.swiper-container {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.swiper-slide {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n}\r\n\r\n.swiper-slide img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n/* 推荐村庄样式 */\r\nh2 {\r\n  margin-top: 20px;\r\n  font-size: 24px;\r\n  text-align: center;\r\n}\r\n\r\n.village-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  padding: 10px;\r\n}\r\n\r\n.village-card {\r\n  border: 1px solid #ddd;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.3s;\r\n  background-color: #fff;\r\n}\r\n\r\n.village-card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.village-image {\r\n  width: 100%;\r\n  height: 150px;\r\n  object-fit: cover;\r\n}\r\n\r\n.village-info {\r\n  padding: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.village-info h3 {\r\n  font-size: 20px;\r\n  margin: 10px 0;\r\n}\r\n\r\n.village-info p {\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.village-link {\r\n  display: inline-block;\r\n  margin-top: 10px;\r\n  padding: 5px 10px;\r\n  background-color: #007BFF;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  border-radius: 5px;\r\n}\r\n\r\n.village-link:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n/* 展示全部按钮样式 */\r\n.show-all-btn {\r\n  width: 100px;\r\n  display: block;\r\n  margin: 20px auto;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  color: #fff;\r\n  background-color: #007BFF;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  border-radius: 5px;\r\n}\r\n\r\n.show-all-btn:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>"],"mappings":";;EAGSA,KAAK,EAAC;AAAU;mBAHzB;;EAmBSA,KAAK,EAAC;AAAc;mBAnB7B;;EA+BaA,KAAK,EAAC;AAAc;;;;;;uBA9B/BC,mBAAA,CA6CM,cA5CJC,mBAAA,UAAa,EACbC,mBAAA,CAYM,OAZNC,UAYM,GAXJC,YAAA,CAUSC,iBAAA;IATNC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IACnBE,UAAU,EAAV,EAAU;IACVC,UAAU,EAAV;;IARRC,OAAA,EAAAC,QAAA,CAUQ,MAAe,CAAfX,mBAAA,YAAe,G,kBACfD,mBAAA,CAEea,SAAA,QAbvBC,WAAA,CAW+CN,KAAA,CAAAO,MAAM,EAXrD,CAW8BC,KAAK,EAAEC,KAAK;2BAAlCC,YAAA,CAEeC,uBAAA;QAFiCC,GAAG,EAAEH;MAAK;QAXlEN,OAAA,EAAAC,QAAA,CAYU,MAA+B,CAA/BV,mBAAA,CAA+B;UAAzBmB,GAAG,EAAEL,KAAK;UAAEM,GAAG,EAAC;gCAZhCC,UAAA,E;QAAAC,CAAA;;;IAAAA,CAAA;qCAiBIvB,mBAAA,UAAa,E,0BACbC,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAoBM,OApBNuB,UAoBM,I,kBAnBJzB,mBAAA,CAkBMa,SAAA,QAtCZC,WAAA,CAsB0BN,KAAA,CAAAkB,eAAe,EAA1BC,OAAO;yBAFhB3B,mBAAA,CAkBM;MAjBJD,KAAK,EAAC,cAAc;MAEnBqB,GAAG,EAAEO,OAAO,CAACC;QAEd1B,mBAAA,CAKE;MAJCmB,GAAG,EAAEM,OAAO,CAACX,KAAK,IAAIR,KAAA,CAAAqB,YAAY;MACnCP,GAAG,EAAC,MAAM;MACVvB,KAAK,EAAC,eAAe;MACpB+B,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,gBAAgB,CAACN,OAAO;6CA7B1CO,UAAA,GA+BQhC,mBAAA,CAMM,OANNiC,UAMM,GALJjC,mBAAA,CAA2B,YAAAkC,gBAAA,CAApBT,OAAO,CAACU,IAAI,kBACnBnC,mBAAA,CAAgC,WAAAkC,gBAAA,CAA1BT,OAAO,CAACW,WAAW,kBACzBlC,YAAA,CAEcmC,sBAAA;MAFAC,EAAE,gBAAgBb,OAAO,CAACC,EAAE;MAAE7B,KAAK,EAAC;;MAlC5DY,OAAA,EAAAC,QAAA,CAkC2E,MAEjE,KAAA6B,MAAA,QAAAA,MAAA,OApCVC,gBAAA,CAkC2E,QAEjE,E;MApCVlB,CAAA;;qCAwCwBhB,KAAA,CAAAmC,OAAO,I,cAA3BzB,YAAA,CAEcqB,sBAAA;IA1ClBnB,GAAA;IAwCiCoB,EAAE,EAAC,UAAU;IAACzC,KAAK,EAAC;;IAxCrDY,OAAA,EAAAC,QAAA,CAwCoE,MAEhE6B,MAAA,QAAAA,MAAA,OA1CJC,gBAAA,CAwCoE,QAEhE,E;IA1CJlB,CAAA;QAAAvB,mBAAA,gBA4CIA,mBAAA,QAAW,EACXG,YAAA,CAAkCwC,sBAAA;IAApBC,OAAO,EAAErC,KAAA,CAAAqC;EAAO,qC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}