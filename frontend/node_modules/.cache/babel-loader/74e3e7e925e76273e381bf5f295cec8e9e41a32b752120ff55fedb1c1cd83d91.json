{"ast":null,"code":"export default {\n  data() {\n    return {\n      users: [],\n      teams: [],\n      villages: [],\n      editingUser: null\n    };\n  },\n  methods: {\n    // 显示所有用户\n    fetchUsers() {\n      fetch('http://localhost:5000/api/users').then(response => response.json()).then(data => {\n        this.users = data.map(user => ({\n          ...user,\n          team_name: this.teams.find(team => team.id === user.team_id)?.name,\n          village_name: this.villages.find(village => village.id === user.village_id)?.name\n        }));\n      });\n    },\n    // 获取所有团队\n    fetchTeams() {\n      fetch('http://localhost:5000/api/techteams').then(response => response.json()).then(data => {\n        this.teams = data;\n      });\n    },\n    // 获取所有村庄\n    fetchVillages() {\n      fetch('http://localhost:5000/api/village').then(response => response.json()).then(data => {\n        this.villages = data;\n      });\n    },\n    // 修改用户权限\n    editUser(userId) {\n      this.editingUser = this.users.find(user => user.id === userId);\n      console.log('Editing user:', this.editingUser); // 添加调试信息\n    },\n    // 保存用户权限\n    saveUser(userId) {\n      const user = this.users.find(user => user.id === userId);\n      console.log('User before saving:', user); // 添加调试信息\n      fetch(`http://localhost:5000/api/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          role: user.role,\n          team_id: user.team_id,\n          village_id: user.village_id\n        })\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('网络响应不是200');\n        }\n        return response.json();\n      }).then(() => {\n        alert('用户信息已更新');\n        this.editingUser = null; // 关闭编辑模式\n        this.fetchUsers(); // 刷新用户列表\n      }).catch(err => {\n        console.error('Error updating user:', err);\n        alert('更新用户信息失败，请重试');\n      });\n    },\n    // 删除用户\n    deleteUser(userId) {\n      if (confirm(`确认删除用户 ${userId} 吗？`)) {\n        fetch(`http://localhost:5000/api/users/${userId}`, {\n          method: 'DELETE'\n        }).then(response => {\n          if (!response.ok) {\n            throw new Error('网络响应不是200');\n          }\n          return response.json();\n        }).then(() => {\n          alert('用户信息已更新');\n          this.editingUser = null; // 关闭编辑模式\n          // 直接更新本地用户列表\n          this.users = this.users.filter(u => u.id !== userId);\n        }).catch(err => {\n          console.error('Error updating user:', err);\n          alert('更新用户信息失败，请重试');\n        });\n      }\n    }\n  },\n  created() {\n    this.fetchTeams();\n    this.fetchVillages();\n    this.fetchUsers();\n  }\n};","map":{"version":3,"names":["data","users","teams","villages","editingUser","methods","fetchUsers","fetch","then","response","json","map","user","team_name","find","team","id","team_id","name","village_name","village","village_id","fetchTeams","fetchVillages","editUser","userId","console","log","saveUser","method","headers","body","JSON","stringify","role","ok","Error","alert","catch","err","error","deleteUser","confirm","filter","u","created"],"sources":["/home/toma/桌面/projects/RuralWebApp/frontend/src/components/UserManagement.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>用户管理</h1>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>用户名</th>\r\n          <th>角色</th>\r\n          <th>团队</th>\r\n          <th>村庄</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in users\" :key=\"user.id\">\r\n          <td>{{ user.username }}</td>\r\n          <td>\r\n            <span v-if=\"!editingUser || editingUser.id !== user.id\">{{ user.role }}</span>\r\n            <select v-else v-model=\"user.role\">\r\n              <option value=\"admin\">系统管理员</option>\r\n              <option value=\"user\">普通用户</option>\r\n              <option value=\"tech\">科技人员用户</option>\r\n              <option value=\"villageAdmin\">村管理员</option>\r\n            </select>\r\n          </td>\r\n          <td>\r\n            <span v-if=\"!editingUser || editingUser.id !== user.id\">{{ user.team_name || '无' }}</span>\r\n            <select v-else v-model=\"user.team_id\">\r\n              <option value=\"\">请选择团队</option>\r\n              <option v-for=\"team in teams\" :key=\"team.id\" :value=\"team.id\">{{ team.name }}</option>\r\n            </select>\r\n          </td>\r\n          <td>\r\n            <span v-if=\"!editingUser || editingUser.id !== user.id\">{{ user.village_name || '无' }}</span>\r\n            <select v-else v-model=\"user.village_id\">\r\n              <option value=\"\">请选择村庄</option>\r\n              <option v-for=\"village in villages\" :key=\"village.id\" :value=\"village.id\">{{ village.name }}</option>\r\n            </select>\r\n          </td>\r\n          <td>\r\n            <button @click=\"editUser(user.id)\" v-if=\"!editingUser || editingUser.id !== user.id\">修改权限</button>\r\n            <button @click=\"saveUser(user.id)\" v-else>保存</button>\r\n            <button @click=\"deleteUser(user.id)\">删除</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      users: [],\r\n      teams: [],\r\n      villages: [],\r\n      editingUser: null,\r\n    };\r\n  },\r\n  methods: {\r\n    // 显示所有用户\r\n    fetchUsers() {\r\n      fetch('http://localhost:5000/api/users')\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.users = data.map(user => ({\r\n            ...user,\r\n            team_name: this.teams.find(team => team.id === user.team_id)?.name,\r\n            village_name: this.villages.find(village => village.id === user.village_id)?.name,\r\n          }));\r\n        });\r\n    },\r\n\r\n    // 获取所有团队\r\n    fetchTeams() {\r\n      fetch('http://localhost:5000/api/techteams')\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.teams = data;\r\n        });\r\n    },\r\n\r\n    // 获取所有村庄\r\n    fetchVillages() {\r\n      fetch('http://localhost:5000/api/village')\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.villages = data;\r\n        });\r\n    },\r\n\r\n    // 修改用户权限\r\n    editUser(userId) {\r\n      this.editingUser = this.users.find(user => user.id === userId);\r\n      console.log('Editing user:', this.editingUser); // 添加调试信息\r\n    },\r\n\r\n    // 保存用户权限\r\n    saveUser(userId) {\r\n      const user = this.users.find(user => user.id === userId);\r\n      console.log('User before saving:', user); // 添加调试信息\r\n      fetch(`http://localhost:5000/api/users/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          role: user.role,\r\n          team_id: user.team_id,\r\n          village_id: user.village_id,\r\n        }),\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('网络响应不是200');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(() => {\r\n        alert('用户信息已更新');\r\n        this.editingUser = null; // 关闭编辑模式\r\n        this.fetchUsers(); // 刷新用户列表\r\n      })\r\n      .catch((err) => {\r\n        console.error('Error updating user:', err);\r\n        alert('更新用户信息失败，请重试');\r\n      });\r\n    },\r\n\r\n    // 删除用户\r\n    deleteUser(userId) {\r\n      if (confirm(`确认删除用户 ${userId} 吗？`)) {\r\n        fetch(`http://localhost:5000/api/users/${userId}`, { method: 'DELETE' })\r\n          .then(response => {\r\n            if (!response.ok) {\r\n              throw new Error('网络响应不是200');\r\n            }\r\n            return response.json();\r\n          })\r\n          .then(() => {\r\n            alert('用户信息已更新');\r\n            this.editingUser = null; // 关闭编辑模式\r\n            // 直接更新本地用户列表\r\n            this.users = this.users.filter(u => u.id !== userId);\r\n          })\r\n          .catch((err) => {\r\n            console.error('Error updating user:', err);\r\n            alert('更新用户信息失败，请重试');\r\n          });\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchTeams();\r\n    this.fetchVillages();\r\n    this.fetchUsers();\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 20px;\r\n  }\r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 12px;\r\n    text-align: center;\r\n  }\r\n  th {\r\n    background-color: #007BFF;\r\n    color: white;\r\n  }\r\n  tr:nth-child(even) {\r\n    background-color: #f2f2f2;\r\n  }\r\n  button {\r\n    margin: 5px;\r\n    padding: 5px 10px;\r\n    background-color: #007BFF;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  button:hover {\r\n    background-color: #007BFF;\r\n  }\r\n  select {\r\n    padding: 5px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n  }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}