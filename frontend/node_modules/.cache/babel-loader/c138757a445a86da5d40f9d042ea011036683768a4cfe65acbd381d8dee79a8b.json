{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      user: {\n        username: '',\n        email: '',\n        password: ''\n      },\n      confirmPassword: '',\n      passwordMismatch: false\n    };\n  },\n  created() {\n    this.fetchUserInfo();\n  },\n  methods: {\n    async fetchUserInfo() {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/users/${this.$route.params.id}`);\n        this.user = response.data;\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n      }\n    },\n    async updateUserInfo() {\n      // 验证两次输入的密码是否一致\n      if (this.user.password && this.user.password !== this.confirmPassword) {\n        this.passwordMismatch = true;\n        return;\n      }\n      try {\n        const userId = this.$route.params.id;\n        const updatedFields = {\n          ...this.user\n        };\n\n        // 如果密码为空，则不发送密码字段\n        if (!updatedFields.password) {\n          delete updatedFields.password;\n        }\n        const response = await axios.put(`http://localhost:5000/api/users/${userId}`, updatedFields);\n        alert(response.data.message);\n        this.passwordMismatch = false; // 清除错误信息\n      } catch (error) {\n        console.error('更新用户信息失败:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","user","username","email","password","confirmPassword","passwordMismatch","created","fetchUserInfo","methods","response","get","$route","params","id","error","console","updateUserInfo","userId","updatedFields","put","alert","message"],"sources":["/home/toma/桌面/projects/RuralWebApp/frontend/src/components/UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-profile\">\r\n    <h2>编辑个人信息</h2>\r\n    <form @submit.prevent=\"updateUserInfo\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">用户名</label>\r\n        <input type=\"text\" id=\"username\" v-model=\"user.username\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">电子邮件</label>\r\n        <input type=\"email\" id=\"email\" v-model=\"user.email\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">密码</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"user.password\" placeholder=\"留空则不更改密码\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"confirm-password\">确认密码</label>\r\n        <input type=\"password\" id=\"confirm-password\" v-model=\"confirmPassword\" placeholder=\"确认密码\" />\r\n        <p v-if=\"passwordMismatch\" class=\"error\">两次输入的密码不一致</p>\r\n      </div>\r\n      <button type=\"submit\">保存更改</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n      },\r\n      confirmPassword: '',\r\n      passwordMismatch: false\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchUserInfo();\r\n  },\r\n  methods: {\r\n    async fetchUserInfo() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/users/${this.$route.params.id}`);\r\n        this.user = response.data;\r\n      } catch (error) {\r\n        console.error('获取用户信息失败:', error);\r\n      }\r\n    },\r\n    async updateUserInfo() {\r\n      // 验证两次输入的密码是否一致\r\n      if (this.user.password && this.user.password !== this.confirmPassword) {\r\n        this.passwordMismatch = true;\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const userId = this.$route.params.id;\r\n        const updatedFields = { ...this.user };\r\n\r\n        // 如果密码为空，则不发送密码字段\r\n        if (!updatedFields.password) {\r\n          delete updatedFields.password;\r\n        }\r\n\r\n        const response = await axios.put(`http://localhost:5000/api/users/${userId}`, updatedFields);\r\n        alert(response.data.message);\r\n        this.passwordMismatch = false; // 清除错误信息\r\n      } catch (error) {\r\n        console.error('更新用户信息失败:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-profile {\r\n  font-family: Arial, sans-serif;\r\n  color: #333;\r\n  background-color: #ffffff; /* 更改为白色背景 */\r\n  padding: 20px;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  border: 1px solid #e0e0e0; /* 添加边框 */\r\n  border-radius: 10px; /* 圆角 */\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* 添加阴影 */\r\n}\r\n\r\nh2 {\r\n  font-size: 32px;\r\n  color: #2c3e50;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-size: 16px;\r\n  color: #555;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"email\"],\r\ninput[type=\"password\"],\r\ntextarea {\r\n  width: calc(100% - 20px); /* 减去右边距 */\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 5px; /* 圆角 */\r\n  font-size: 16px;\r\n  background-color: #f9f9f9; /* 浅灰色背景 */\r\n}\r\n\r\nbutton {\r\n  margin-top: 20px;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  color: #fff;\r\n  background-color: #007BFF;\r\n  border: none;\r\n  border-radius: 5px; /* 圆角 */\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n  margin-left: auto; /* 添加此行 */\r\n  margin-right: auto; /* 添加此行 */\r\n  display: block; /* 添加此行 */\r\n  \r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-size: 14px;\r\n  margin-top: 5px;\r\n}\r\n</style>\r\n\r\n"],"mappings":"AA2BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,eAAe,EAAE,EAAE;MACnBC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,mCAAmC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE,CAAC;QAC5F,IAAI,CAACb,IAAG,GAAIS,QAAQ,CAACV,IAAI;MAC3B,EAAE,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACnC;IACF,CAAC;IACD,MAAME,cAAcA,CAAA,EAAG;MACrB;MACA,IAAI,IAAI,CAAChB,IAAI,CAACG,QAAO,IAAK,IAAI,CAACH,IAAI,CAACG,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QACrE,IAAI,CAACC,gBAAe,GAAI,IAAI;QAC5B;MACF;MAEA,IAAI;QACF,MAAMY,MAAK,GAAI,IAAI,CAACN,MAAM,CAACC,MAAM,CAACC,EAAE;QACpC,MAAMK,aAAY,GAAI;UAAE,GAAG,IAAI,CAAClB;QAAK,CAAC;;QAEtC;QACA,IAAI,CAACkB,aAAa,CAACf,QAAQ,EAAE;UAC3B,OAAOe,aAAa,CAACf,QAAQ;QAC/B;QAEA,MAAMM,QAAO,GAAI,MAAMX,KAAK,CAACqB,GAAG,CAAC,mCAAmCF,MAAM,EAAE,EAAEC,aAAa,CAAC;QAC5FE,KAAK,CAACX,QAAQ,CAACV,IAAI,CAACsB,OAAO,CAAC;QAC5B,IAAI,CAAChB,gBAAe,GAAI,KAAK,EAAE;MACjC,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACnC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}