{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      teams: [],\n      showCreateForm: false,\n      newTeamName: ''\n    };\n  },\n  methods: {\n    // 获取所有团队\n    fetchTeams() {\n      axios.get('http://localhost:5000/api/techteams').then(response => {\n        this.teams = response.data;\n      }).catch(error => {\n        console.error('获取团队信息出错：', error);\n        alert('获取团队信息失败');\n      });\n    },\n    // 切换创建表单的显示和隐藏\n    toggleCreateForm() {\n      this.showCreateForm = !this.showCreateForm;\n      this.newTeamName = ''; // 清空输入框\n    },\n    // 创建技术团队\n    createTechTeam() {\n      if (this.newTeamName.trim()) {\n        axios.post('http://localhost:9000/api/techteams/create', {\n          name: this.newTeamName\n        }).then(response => {\n          alert('技术团队创建成功');\n          this.fetchTeams(); // 刷新团队列表\n          this.toggleCreateForm(); // 隐藏表单\n        }).catch(error => {\n          alert('技术团队创建失败');\n        });\n      } else {\n        alert('请输入有效的技术团队名称');\n      }\n    },\n    // 删除技术团队\n    deleteTeam(teamId) {\n      const team = this.teams.find(t => t.id === teamId);\n      if (team && confirm(`确认删除团队 ${team.name} 吗？`)) {\n        axios.delete(`http://localhost:9000/api/techteams/${teamId}`).then(response => {\n          alert('团队已删除');\n          this.fetchTeams(); // 刷新团队列表\n        }).catch(err => {\n          console.error('Error deleting team:', err);\n          alert('删除团队失败，请重试');\n        });\n      }\n    }\n  },\n  created() {\n    this.fetchTeams();\n  }\n};","map":{"version":3,"names":["axios","data","teams","showCreateForm","newTeamName","methods","fetchTeams","get","then","response","catch","error","console","alert","toggleCreateForm","createTechTeam","trim","post","name","deleteTeam","teamId","team","find","t","id","confirm","delete","err","created"],"sources":["/home/toma/桌面/projects/RuralWebApp/frontend/src/components/AdminTeam.vue"],"sourcesContent":["<template>\r\n  <div class=\"tech-team-management\">\r\n    <h2>管理技术团队</h2>\r\n    <button @click=\"toggleCreateForm\" class=\"admin-btn\">{{ showCreateForm ? '取消' : '创建技术团队' }}</button>\r\n    <div v-if=\"showCreateForm\" class=\"create-form\">\r\n      <input v-model=\"newTeamName\" placeholder=\"请输入技术团队名称\" />\r\n      <button @click=\"createTechTeam\" class=\"admin-btn\">确认创建</button>\r\n    </div>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>团队名称</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"team in teams\" :key=\"team.id\">\r\n          <td>{{ team.name }}</td>\r\n          <td>\r\n            <button @click=\"deleteTeam(team.id)\">删除</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      teams: [],\r\n      showCreateForm: false,\r\n      newTeamName: '',\r\n    };\r\n  },\r\n  methods: {\r\n    // 获取所有团队\r\n    fetchTeams() {\r\n      axios.get('http://localhost:5000/api/techteams')\r\n        .then((response) => {\r\n          this.teams = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.error('获取团队信息出错：', error);\r\n          alert('获取团队信息失败');\r\n        });\r\n    },\r\n\r\n    // 切换创建表单的显示和隐藏\r\n    toggleCreateForm() {\r\n      this.showCreateForm = !this.showCreateForm;\r\n      this.newTeamName = ''; // 清空输入框\r\n    },\r\n\r\n    // 创建技术团队\r\n    createTechTeam() {\r\n      if (this.newTeamName.trim()) {\r\n        axios.post('http://localhost:9000/api/techteams/create', { name: this.newTeamName })\r\n          .then(response => {\r\n            alert('技术团队创建成功');\r\n            this.fetchTeams(); // 刷新团队列表\r\n            this.toggleCreateForm(); // 隐藏表单\r\n          })\r\n          .catch(error => {\r\n            alert('技术团队创建失败');\r\n          });\r\n      } else {\r\n        alert('请输入有效的技术团队名称');\r\n      }\r\n    },\r\n\r\n    // 删除技术团队\r\n    deleteTeam(teamId) {\r\n      const team = this.teams.find(t => t.id === teamId);\r\n      if (team && confirm(`确认删除团队 ${team.name} 吗？`)) {\r\n        axios.delete(`http://localhost:9000/api/techteams/${teamId}`)\r\n          .then(response => {\r\n            alert('团队已删除');\r\n            this.fetchTeams(); // 刷新团队列表\r\n          })\r\n          .catch((err) => {\r\n            console.error('Error deleting team:', err);\r\n            alert('删除团队失败，请重试');\r\n          });\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchTeams();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tech-team-management {\r\n  padding: 30px;\r\n  background-color: #f9f9f9;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.admin-btn {\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  background-color: #007BFF;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.admin-btn:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.create-form {\r\n  margin-top: 20px;\r\n}\r\n\r\n.create-form input {\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  width: 80%;\r\n  margin-right: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 12px;\r\n  text-align: center;\r\n}\r\nth {\r\n  background-color: #007BFF;\r\n  color: white;\r\n}\r\ntr:nth-child(even) {\r\n  background-color: #f2f2f2;\r\n}\r\nbutton {\r\n  margin: 5px;\r\n  padding: 5px 10px;\r\n  background-color: #007BFF;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>"],"mappings":"AA4BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,cAAc,EAAE,KAAK;MACrBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,UAAUA,CAAA,EAAG;MACXN,KAAK,CAACO,GAAG,CAAC,qCAAqC,EAC5CC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACP,KAAI,GAAIO,QAAQ,CAACR,IAAI;MAC5B,CAAC,EACAS,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjCE,KAAK,CAAC,UAAU,CAAC;MACnB,CAAC,CAAC;IACN,CAAC;IAED;IACAC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACX,cAAa,GAAI,CAAC,IAAI,CAACA,cAAc;MAC1C,IAAI,CAACC,WAAU,GAAI,EAAE,EAAE;IACzB,CAAC;IAED;IACAW,cAAcA,CAAA,EAAG;MACf,IAAI,IAAI,CAACX,WAAW,CAACY,IAAI,CAAC,CAAC,EAAE;QAC3BhB,KAAK,CAACiB,IAAI,CAAC,4CAA4C,EAAE;UAAEC,IAAI,EAAE,IAAI,CAACd;QAAY,CAAC,EAChFI,IAAI,CAACC,QAAO,IAAK;UAChBI,KAAK,CAAC,UAAU,CAAC;UACjB,IAAI,CAACP,UAAU,CAAC,CAAC,EAAE;UACnB,IAAI,CAACQ,gBAAgB,CAAC,CAAC,EAAE;QAC3B,CAAC,EACAJ,KAAK,CAACC,KAAI,IAAK;UACdE,KAAK,CAAC,UAAU,CAAC;QACnB,CAAC,CAAC;MACN,OAAO;QACLA,KAAK,CAAC,cAAc,CAAC;MACvB;IACF,CAAC;IAED;IACAM,UAAUA,CAACC,MAAM,EAAE;MACjB,MAAMC,IAAG,GAAI,IAAI,CAACnB,KAAK,CAACoB,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAMJ,MAAM,CAAC;MAClD,IAAIC,IAAG,IAAKI,OAAO,CAAC,UAAUJ,IAAI,CAACH,IAAI,KAAK,CAAC,EAAE;QAC7ClB,KAAK,CAAC0B,MAAM,CAAC,uCAAuCN,MAAM,EAAE,EACzDZ,IAAI,CAACC,QAAO,IAAK;UAChBI,KAAK,CAAC,OAAO,CAAC;UACd,IAAI,CAACP,UAAU,CAAC,CAAC,EAAE;QACrB,CAAC,EACAI,KAAK,CAAEiB,GAAG,IAAK;UACdf,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEgB,GAAG,CAAC;UAC1Cd,KAAK,CAAC,YAAY,CAAC;QACrB,CAAC,CAAC;MACN;IACF;EACF,CAAC;EACDe,OAAOA,CAAA,EAAG;IACR,IAAI,CAACtB,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}