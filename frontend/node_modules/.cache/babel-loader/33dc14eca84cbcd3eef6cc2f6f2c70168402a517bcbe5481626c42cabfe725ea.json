{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"onUpdate:modelValue\"];\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = [\"onUpdate:modelValue\"];\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = [\"onUpdate:modelValue\"];\nconst _hoisted_8 = [\"value\"];\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"用户管理\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"用户名\"), _createElementVNode(\"th\", null, \"角色\"), _createElementVNode(\"th\", null, \"团队\"), _createElementVNode(\"th\", null, \"村庄\"), _createElementVNode(\"th\", null, \"操作\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: user.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(user.username), 1 /* TEXT */), _createElementVNode(\"td\", null, [!$data.editingUser || $data.editingUser.id !== user.id ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, _toDisplayString(user.role), 1 /* TEXT */)) : _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n      key: 1,\n      \"onUpdate:modelValue\": $event => user.role = $event\n    }, [...(_cache[0] || (_cache[0] = [_createElementVNode(\"option\", {\n      value: \"admin\"\n    }, \"系统管理员\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n      value: \"user\"\n    }, \"普通用户\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n      value: \"tech\"\n    }, \"科技人员用户\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n      value: \"villageAdmin\"\n    }, \"村管理员\", -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_2)), [[_vModelSelect, user.role]])]), _createElementVNode(\"td\", null, [!$data.editingUser || $data.editingUser.id !== user.id ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(user.team_name || '无'), 1 /* TEXT */)) : _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n      key: 1,\n      \"onUpdate:modelValue\": $event => user.team_id = $event\n    }, [_cache[1] || (_cache[1] = _createElementVNode(\"option\", {\n      value: \"\"\n    }, \"请选择团队\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.teams, team => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: team.id,\n        value: team.id\n      }, _toDisplayString(team.name), 9 /* TEXT, PROPS */, _hoisted_5);\n    }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_4)), [[_vModelSelect, user.team_id]])]), _createElementVNode(\"td\", null, [!$data.editingUser || $data.editingUser.id !== user.id ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, _toDisplayString(user.village_name || '无'), 1 /* TEXT */)) : _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n      key: 1,\n      \"onUpdate:modelValue\": $event => user.village_id = $event\n    }, [_cache[2] || (_cache[2] = _createElementVNode(\"option\", {\n      value: \"\"\n    }, \"请选择村庄\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.villages, village => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: village.id,\n        value: village.id\n      }, _toDisplayString(village.name), 9 /* TEXT, PROPS */, _hoisted_8);\n    }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_7)), [[_vModelSelect, user.village_id]])]), _createElementVNode(\"td\", null, [!$data.editingUser || $data.editingUser.id !== user.id ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.editUser(user.id)\n    }, \"修改权限\", 8 /* PROPS */, _hoisted_9)) : (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: $event => $options.saveUser(user.id)\n    }, \"保存\", 8 /* PROPS */, _hoisted_10)), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteUser(user.id)\n    }, \"删除\", 8 /* PROPS */, _hoisted_11)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","users","user","id","_toDisplayString","username","editingUser","_hoisted_1","role","$event","value","_hoisted_2","_hoisted_3","team_name","team_id","teams","team","name","_hoisted_5","_hoisted_4","_hoisted_6","village_name","village_id","villages","village","_hoisted_8","_hoisted_7","onClick","$options","editUser","_hoisted_9","saveUser","_hoisted_10","deleteUser","_hoisted_11"],"sources":["/home/toma/桌面/projects/RuralWebApp/frontend/src/components/UserManagement.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>用户管理</h1>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>用户名</th>\r\n          <th>角色</th>\r\n          <th>团队</th>\r\n          <th>村庄</th>\r\n          <th>操作</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in users\" :key=\"user.id\">\r\n          <td>{{ user.username }}</td>\r\n          <td>\r\n            <span v-if=\"!editingUser || editingUser.id !== user.id\">{{ user.role }}</span>\r\n            <select v-else v-model=\"user.role\">\r\n              <option value=\"admin\">系统管理员</option>\r\n              <option value=\"user\">普通用户</option>\r\n              <option value=\"tech\">科技人员用户</option>\r\n              <option value=\"villageAdmin\">村管理员</option>\r\n            </select>\r\n          </td>\r\n          <td>\r\n            <span v-if=\"!editingUser || editingUser.id !== user.id\">{{ user.team_name || '无' }}</span>\r\n            <select v-else v-model=\"user.team_id\">\r\n              <option value=\"\">请选择团队</option>\r\n              <option v-for=\"team in teams\" :key=\"team.id\" :value=\"team.id\">{{ team.name }}</option>\r\n            </select>\r\n          </td>\r\n          <td>\r\n            <span v-if=\"!editingUser || editingUser.id !== user.id\">{{ user.village_name || '无' }}</span>\r\n            <select v-else v-model=\"user.village_id\">\r\n              <option value=\"\">请选择村庄</option>\r\n              <option v-for=\"village in villages\" :key=\"village.id\" :value=\"village.id\">{{ village.name }}</option>\r\n            </select>\r\n          </td>\r\n          <td>\r\n            <button @click=\"editUser(user.id)\" v-if=\"!editingUser || editingUser.id !== user.id\">修改权限</button>\r\n            <button @click=\"saveUser(user.id)\" v-else>保存</button>\r\n            <button @click=\"deleteUser(user.id)\">删除</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      users: [],\r\n      teams: [],\r\n      villages: [],\r\n      editingUser: null,\r\n    };\r\n  },\r\n  methods: {\r\n    // 显示所有用户\r\n    fetchUsers() {\r\n      fetch('http://localhost:5000/api/users')\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.users = data.map(user => ({\r\n            ...user,\r\n            team_name: this.teams.find(team => team.id === user.team_id)?.name,\r\n            village_name: this.villages.find(village => village.id === user.village_id)?.name,\r\n          }));\r\n        });\r\n    },\r\n\r\n    // 获取所有团队\r\n    fetchTeams() {\r\n      fetch('http://localhost:5000/api/techteams')\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.teams = data;\r\n        });\r\n    },\r\n\r\n    // 获取所有村庄\r\n    fetchVillages() {\r\n      fetch('http://localhost:5000/api/village')\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.villages = data;\r\n        });\r\n    },\r\n\r\n    // 修改用户权限\r\n    editUser(userId) {\r\n      this.editingUser = this.users.find(user => user.id === userId);\r\n      console.log('Editing user:', this.editingUser); // 添加调试信息\r\n    },\r\n\r\n    // 保存用户权限\r\n    saveUser(userId) {\r\n      const user = this.users.find(user => user.id === userId);\r\n      console.log('User before saving:', user); // 添加调试信息\r\n      fetch(`http://localhost:5000/api/users/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          role: user.role,\r\n          team_id: user.team_id,\r\n          village_id: user.village_id,\r\n        }),\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('网络响应不是200');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(() => {\r\n        alert('用户信息已更新');\r\n        this.editingUser = null; // 关闭编辑模式\r\n        this.fetchUsers(); // 刷新用户列表\r\n      })\r\n      .catch((err) => {\r\n        console.error('Error updating user:', err);\r\n        alert('更新用户信息失败，请重试');\r\n      });\r\n    },\r\n\r\n    // 删除用户\r\n    deleteUser(userId) {\r\n      if (confirm(`确认删除用户 ${userId} 吗？`)) {\r\n        fetch(`http://localhost:5000/api/users/${userId}`, { method: 'DELETE' })\r\n          .then(response => {\r\n            if (!response.ok) {\r\n              throw new Error('网络响应不是200');\r\n            }\r\n            return response.json();\r\n          })\r\n          .then(() => {\r\n            alert('用户信息已更新');\r\n            this.editingUser = null; // 关闭编辑模式\r\n            // 直接更新本地用户列表\r\n            this.users = this.users.filter(u => u.id !== userId);\r\n          })\r\n          .catch((err) => {\r\n            console.error('Error updating user:', err);\r\n            alert('更新用户信息失败，请重试');\r\n          });\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchTeams();\r\n    this.fetchVillages();\r\n    this.fetchUsers();\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 20px;\r\n  }\r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 12px;\r\n    text-align: center;\r\n  }\r\n  th {\r\n    background-color: #007BFF;\r\n    color: white;\r\n  }\r\n  tr:nth-child(even) {\r\n    background-color: #f2f2f2;\r\n  }\r\n  button {\r\n    margin: 5px;\r\n    padding: 5px 10px;\r\n    background-color: #007BFF;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  button:hover {\r\n    background-color: #007BFF;\r\n  }\r\n  select {\r\n    padding: 5px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n  }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}