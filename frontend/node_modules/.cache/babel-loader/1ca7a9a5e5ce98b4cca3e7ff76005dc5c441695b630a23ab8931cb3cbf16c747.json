{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      newNoticeTitle: '',\n      newNoticeContent: '',\n      notices: [],\n      headerImage: null,\n      currentHeaderImage: null\n    };\n  },\n  async created() {\n    await this.fetchNotices();\n    await this.fetchCurrentHeaderImage();\n  },\n  computed: {\n    sortedNotices() {\n      return this.notices.slice().sort((a, b) => {\n        return b.isPinned - a.isPinned;\n      });\n    }\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.headerImage = event.target.files[0];\n    },\n    async uploadHeaderImage() {\n      const formData = new FormData();\n      formData.append('image', this.headerImage);\n      try {\n        const response = await axios.post('http://localhost:5000/api/upload-header-image', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        this.currentHeaderImage = response.data.path;\n        alert('头图上传成功');\n      } catch (error) {\n        console.error('头图上传失败:', error);\n      }\n    },\n    async deleteHeaderImage() {\n      try {\n        await axios.delete('http://localhost:5000/api/delete-header-image');\n        this.currentHeaderImage = null;\n        alert('头图删除成功');\n      } catch (error) {\n        console.error('头图删除失败:', error);\n      }\n    },\n    async fetchNotices() {\n      try {\n        const response = await axios.get('http://localhost:5000/api/notices');\n        this.notices = response.data;\n      } catch (error) {\n        console.error('获取通知失败:', error);\n      }\n    },\n    async addNotice() {\n      if (!this.newNoticeTitle.trim() || !this.newNoticeContent.trim()) {\n        alert('通知标题和内容不能为空');\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:5000/api/notices', {\n          title: this.newNoticeTitle,\n          content: this.newNoticeContent\n        });\n        this.notices.push(response.data);\n        this.newNoticeTitle = '';\n        this.newNoticeContent = '';\n        alert('通知添加成功');\n      } catch (error) {\n        console.error('添加通知失败:', error);\n      }\n    },\n    async deleteNotice(noticeId) {\n      console.log('Deleting notice with ID:', noticeId); // 添加日志输出\n      try {\n        await axios.delete(`http://localhost:5000/api/notices/${noticeId}`);\n        // 使用 filter 方法移除指定ID的通知\n        this.notices = this.notices.filter(notice => notice.id !== noticeId);\n        alert('通知已删除');\n      } catch (error) {\n        if (error.response.status === 404) {\n          alert('通知未找到，请检查通知ID是否正确');\n        } else {\n          console.error('删除通知失败:', error);\n        }\n      }\n    },\n    async togglePin(noticeId) {\n      try {\n        const action = this.notices.find(notice => notice.id === noticeId).isPinned === 1 ? 'unpin' : 'pin';\n        const response = await axios.put(`http://localhost:5000/api/notices/${noticeId}/${action}`);\n        if (response.data && response.data.notice) {\n          // 更新本地数据\n          this.notices = this.notices.map(notice => notice.id === noticeId ? response.data.notice : notice);\n          alert(`${action === 'pin' ? '通知已置顶' : '通知已取消置顶'}`);\n        } else {\n          console.error(`${action === 'pin' ? '置顶' : '取消置顶'}通知响应格式不正确:`, response.data);\n        }\n      } catch (error) {\n        console.error(`${action === 'pin' ? '置顶' : '取消置顶'}通知失败:`, error);\n      }\n    },\n    async fetchCurrentHeaderImage() {\n      try {\n        const response = await axios.get('http://localhost:5000/api/get-header-image');\n        this.currentHeaderImage = response.data.path;\n      } catch (error) {\n        console.error('获取当前头图失败:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","newNoticeTitle","newNoticeContent","notices","headerImage","currentHeaderImage","created","fetchNotices","fetchCurrentHeaderImage","computed","sortedNotices","slice","sort","a","b","isPinned","methods","handleFileUpload","event","target","files","uploadHeaderImage","formData","FormData","append","response","post","headers","path","alert","error","console","deleteHeaderImage","delete","get","addNotice","trim","title","content","push","deleteNotice","noticeId","log","filter","notice","id","status","togglePin","action","find","put","map"],"sources":["/home/toma/桌面/projects/RuralWebApp/frontend/src/components/SystemSetting.vue"],"sourcesContent":["<!-- SystemSetting.vue -->\r\n<template>\r\n  <div class=\"settings-container\">\r\n    <h2>系统设置</h2>\r\n\r\n    <!-- 通知管理 -->\r\n    <div class=\"notice-management\">\r\n      <h3>通知管理</h3>\r\n      <input v-model=\"newNoticeTitle\" placeholder=\"输入通知标题\" />\r\n      <textarea v-model=\"newNoticeContent\" placeholder=\"输入新的通知\"></textarea>\r\n      <button @click=\"addNotice\">添加通知</button>\r\n      <ul>\r\n        <li v-for=\"(notice) in sortedNotices\" :key=\"notice.id\" :class=\"{ 'pinned-notice': notice.isPinned === 1 }\">\r\n          {{ notice.title }} - {{ notice.content }}\r\n          <div class=\"button-group\">\r\n            <button @click=\"togglePin(notice.id)\">\r\n              {{ notice.isPinned === 1 ? '取消置顶' : '置顶' }}\r\n            </button>\r\n            <button @click=\"deleteNotice(notice.id)\">删除</button>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newNoticeTitle: '',\r\n      newNoticeContent: '',\r\n      notices: [],\r\n      headerImage: null,\r\n      currentHeaderImage: null,\r\n    };\r\n  },\r\n  async created() {\r\n    await this.fetchNotices();\r\n    await this.fetchCurrentHeaderImage();\r\n  },\r\n  computed: {\r\n    sortedNotices() {\r\n      return this.notices.slice().sort((a, b) => {\r\n        return b.isPinned - a.isPinned;\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    handleFileUpload(event) {\r\n      this.headerImage = event.target.files[0];\r\n    },\r\n    async uploadHeaderImage() {\r\n      const formData = new FormData();\r\n      formData.append('image', this.headerImage);\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/upload-header-image', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        });\r\n        this.currentHeaderImage = response.data.path;\r\n        alert('头图上传成功');\r\n      } catch (error) {\r\n        console.error('头图上传失败:', error);\r\n      }\r\n    },\r\n    async deleteHeaderImage() {\r\n      try {\r\n        await axios.delete('http://localhost:5000/api/delete-header-image');\r\n        this.currentHeaderImage = null;\r\n        alert('头图删除成功');\r\n      } catch (error) {\r\n        console.error('头图删除失败:', error);\r\n      }\r\n    },\r\n    async fetchNotices() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/notices');\r\n        this.notices = response.data;\r\n      } catch (error) {\r\n        console.error('获取通知失败:', error);\r\n      }\r\n    },\r\n    async addNotice() {\r\n      if (!this.newNoticeTitle.trim() || !this.newNoticeContent.trim()) {\r\n        alert('通知标题和内容不能为空');\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/notices', {\r\n          title: this.newNoticeTitle,\r\n          content: this.newNoticeContent,\r\n        });\r\n        this.notices.push(response.data);\r\n        this.newNoticeTitle = '';\r\n        this.newNoticeContent = '';\r\n        alert('通知添加成功');\r\n      } catch (error) {\r\n        console.error('添加通知失败:', error);\r\n      }\r\n    },\r\n    async deleteNotice(noticeId) {\r\n      console.log('Deleting notice with ID:', noticeId); // 添加日志输出\r\n      try {\r\n        await axios.delete(`http://localhost:5000/api/notices/${noticeId}`);\r\n        // 使用 filter 方法移除指定ID的通知\r\n        this.notices = this.notices.filter((notice) => notice.id !== noticeId);\r\n        alert('通知已删除');\r\n      } catch (error) {\r\n        if (error.response.status === 404) {\r\n          alert('通知未找到，请检查通知ID是否正确');\r\n        } else {\r\n          console.error('删除通知失败:', error);\r\n        }\r\n      }\r\n    },\r\n    async togglePin(noticeId) {\r\n      try {\r\n        const action = this.notices.find(notice => notice.id === noticeId).isPinned === 1 ? 'unpin' : 'pin';\r\n        const response = await axios.put(`http://localhost:5000/api/notices/${noticeId}/${action}`);\r\n        if (response.data && response.data.notice) {\r\n          // 更新本地数据\r\n          this.notices = this.notices.map((notice) =>\r\n            notice.id === noticeId ? response.data.notice : notice\r\n          );\r\n          alert(`${action === 'pin' ? '通知已置顶' : '通知已取消置顶'}`);\r\n        } else {\r\n          console.error(`${action === 'pin' ? '置顶' : '取消置顶'}通知响应格式不正确:`, response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(`${action === 'pin' ? '置顶' : '取消置顶'}通知失败:`, error);\r\n      }\r\n    },\r\n    async fetchCurrentHeaderImage() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/get-header-image');\r\n        this.currentHeaderImage = response.data.path;\r\n      } catch (error) {\r\n        console.error('获取当前头图失败:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.settings-container {\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh2 {\r\n  font-size: 24px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n.pinned-notice {\r\n  background-color: #ffebcc; /* 例如，使用黄色背景 */\r\n  font-weight: bold;\r\n}\r\n\r\n.notice-management {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.notice-management h3 {\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\ninput, textarea {\r\n  width: calc(100% - 22px);\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 15px;\r\n  background-color: #007BFF;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-right: 5px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.current-header-image img {\r\n  max-width: 100%;\r\n  margin-bottom: 10px;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}